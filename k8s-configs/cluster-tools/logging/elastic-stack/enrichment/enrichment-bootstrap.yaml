---
apiVersion: v1
kind: Pod
metadata:
  name: enrichment-bootstrap
spec:
  restartPolicy: OnFailure
  serviceAccount: enrichment

  initContainers:
  - name: efs-provisioner
    image: quay.io/external_storage/efs-provisioner:v2.4.0
    imagePullPolicy: IfNotPresent
    workingDir: /scripts
    command: ["sh", '$(CONTAINER_NAME).sh']

    env:
      - name: FILE_SYSTEM_ID
        valueFrom:
          configMapKeyRef:
            name: efs-provisioner
            key: file.system.id
      - name: AWS_REGION
        valueFrom:
          configMapKeyRef:
            name: efs-provisioner
            key: aws.region
      - name: DNS_NAME
        valueFrom:
          configMapKeyRef:
            name: efs-provisioner
            key: dns.name
            optional: true
      - name: PROVISIONER_NAME
        valueFrom:
          configMapKeyRef:
            name: efs-provisioner
            key: provisioner.name
      - name: CONTAINER_NAME
        value: "efs-provisioner"

    volumeMounts:
      - mountPath: /enrichment-shared-volume
        name: enrichment-shared-volume
        readOnly: false
      - name: efs-provisioner-script
        mountPath: /scripts/efs-provisioner.sh
        subPath: efs-provisioner.sh

  containers:

  - name: elasticsearch-bootstrap
    image: gcr.io/ping-identity/ping-cloud-enrichment-bootstrap/ping-cloud-enrichment-bootstrap:7.8.0
    workingDir: /scripts
    command: ["sh", '$(CONTAINER_NAME).sh']

    securityContext:
      privileged: true

    env:
    - name: CONTAINER_NAME
      value: "elasticsearch-bootstrap"
    - name: ELASTICSEARCH_URL
      value: "http://elasticsearch"
    - name: ELASTICSEARCH_PORT
      value: "9200"
    - name: ES_PATH_CONF
      value: "/usr/share/elasticsearch/config"
    - name: DESIRED_STATUS
      value: "green"

    volumeMounts:
    - name: enrichment-shared-volume
      mountPath: /enrichment-shared-volume
      readOnly: false
    - name: enrichment-elasticsearch-ilm-policies
      mountPath: /usr/share/elasticsearch/data/ilm-policies
    - name: enrichment-elasticsearch-index-bootstraps
      mountPath: /usr/share/elasticsearch/data/index-bootstraps
    - name: enrichment-elasticsearch-index-templates
      mountPath: /usr/share/elasticsearch/data/index-templates
    - name: enrichment-elasticsearch-role-bootstraps
      mountPath: /usr/share/elasticsearch/data/role-bootstraps

  volumes:
  - name: enrichment-shared-volume
    nfs:
      server: ${EFS_FILESYSTEM_ID}.efs.${REGION}.amazonaws.com
      path: /
  - name: efs-provisioner-script
    configMap:
      name: efs-provisioner-script
      defaultMode: 0555
  - name: enrichment-elasticsearch-yaml-config
    configMap:
      name: enrichment-elasticsearch-yaml-config
  - name: enrichment-certs-config
    configMap:
      name: enrichment-certs-config
  - name: enrichment-elasticsearch-ilm-policies
    configMap:
      name: enrichment-elasticsearch-ilm-policies
  - name: enrichment-elasticsearch-index-bootstraps
    configMap:
      name: enrichment-elasticsearch-index-bootstraps
  - name: enrichment-elasticsearch-index-templates
    configMap:
      name: enrichment-elasticsearch-index-templates
  - name: enrichment-elasticsearch-role-bootstraps
    configMap:
      name: enrichment-elasticsearch-role-bootstraps

---
apiVersion: v1
kind: ConfigMap
metadata:
  name: efs-provisioner-script
data:
  efs-provisioner.sh: |
    #!/usr/bin/env sh
    echo "$(date +'%FT%T.%3N')\tCreating enrichment volume folders..." >&1
    dirs_path=/enrichment-shared-volume
    set -- "logs" "enrichment-cache" "certs" "secrets"
    while [ $# -gt 0 ]
    do        
        mkdir -p $dirs_path/$1
        if [ -d "$dirs_path/$1" ]; then
            echo "$(date +'%FT%T.%3N')\tFolder $dirs_path/$1 exist." >&1
        else
            echo "$(date +'%FT%T.%3N')\tFolder $dirs_path/$1 not exist." >&2
        fi
        shift;
    done
    chown -R 1000:1000 /enrichment-shared-volume
    echo "$(date +'%FT%T.%3N')\t$CONTAINER_NAME: Job done!" >&1
