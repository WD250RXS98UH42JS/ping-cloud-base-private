---
apiVersion: v1
kind: Pod
metadata:
  name: enrichment-bootstrap
spec:
  restartPolicy: OnFailure
  serviceAccount: enrichment

  initContainers:
  - name: efs-provisioner
    image: quay.io/external_storage/efs-provisioner:latest
    imagePullPolicy: IfNotPresent
    workingDir: /scripts
    command: ["sh", '$(CONTAINER_NAME).sh']

    env:
      - name: FILE_SYSTEM_ID
        valueFrom:
          configMapKeyRef:
            name: efs-provisioner
            key: file.system.id
      - name: AWS_REGION
        valueFrom:
          configMapKeyRef:
            name: efs-provisioner
            key: aws.region
      - name: DNS_NAME
        valueFrom:
          configMapKeyRef:
            name: efs-provisioner
            key: dns.name
            optional: true
      - name: PROVISIONER_NAME
        valueFrom:
          configMapKeyRef:
            name: efs-provisioner
            key: provisioner.name
      - name: CONTAINER_NAME
        value: "efs-provisioner"

    volumeMounts:
      - mountPath: /enrichment-shared-volume
        name: enrichment-shared-volume
        readOnly: false
      - mountPath: /scripts
        name: enrichment-scripts

  - name: elasticsearch-bootstrap
    image: centos:7
    workingDir: /scripts
    command: ["sh", '$(CONTAINER_NAME).sh']

    securityContext:
      privileged: true

    env:
    - name: CONTAINER_NAME
      value: "elasticsearch-bootstrap"
    - name: ELASTICSEARCH_URL
      value: "http://elasticsearch"
    - name: ELASTICSEARCH_PORT
      value: "9200"
    - name: ES_PATH_CONF
      value: "/usr/share/elasticsearch/config"

    volumeMounts:
    - name: enrichment-shared-volume
      mountPath: /enrichment-shared-volume
      readOnly: false
    - name: enrichment-scripts
      mountPath: /scripts
    - name: enrichment-elasticsearch-ilm-policies
      mountPath: /usr/share/elasticsearch/data/ilm-policies
    - name: enrichment-elasticsearch-index-bootstraps
      mountPath: /usr/share/elasticsearch/data/index-bootstraps
    - name: enrichment-elasticsearch-index-templates
      mountPath: /usr/share/elasticsearch/data/index-templates
    - name: enrichment-elasticsearch-role-bootstraps
      mountPath: /usr/share/elasticsearch/data/role-bootstraps

  - name: check-logstash-availability
    image: busybox
    command: ['sh', '-c', "until nslookup logstash-elastic.$(cat /var/run/secrets/kubernetes.io/serviceaccount/namespace).svc.cluster.local; do echo waiting for elasticsearch; sleep 2; done"]

  containers:
  - name: put-logs-to-logstash
    image: centos:7
    workingDir: /scripts
    command: [ "./$(CONTAINER_NAME).sh", "-a" ]

    env:
      - name: WAIT_FOR
        value: "logstash"
      - name: CONTAINER_NAME
        value: "put-logs-to-logstash"
      - name: LOGSTASH_URL
        value: "http://logstash-elastic"
      - name: LOGSTASH_PORT
        value: "20510"
        
    volumeMounts:
      - mountPath: /enrichment-shared-volume
        name: enrichment-shared-volume
        readOnly: false
      - mountPath: /scripts
        name: enrichment-scripts

  volumes:
  - name: enrichment-shared-volume
    nfs:
      server: ${EFS_FILESYSTEM_ID}.efs.${REGION}.amazonaws.com
      path: /
  - name: enrichment-scripts
    configMap:
      name: enrichment-scripts
      defaultMode: 0555
  - name: enrichment-elasticsearch-yaml-config
    configMap:
      name: enrichment-elasticsearch-yaml-config
  - name: enrichment-certs-config
    configMap:
      name: enrichment-certs-config
  - name: enrichment-elasticsearch-ilm-policies
    configMap:
      name: enrichment-elasticsearch-ilm-policies
  - name: enrichment-elasticsearch-index-bootstraps
    configMap:
      name: enrichment-elasticsearch-index-bootstraps
  - name: enrichment-elasticsearch-index-templates
    configMap:
      name: enrichment-elasticsearch-index-templates
  - name: enrichment-elasticsearch-role-bootstraps
    configMap:
      name: enrichment-elasticsearch-role-bootstraps